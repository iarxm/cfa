#### noops
bind compose,attach o  noop
bind index,pager    o  noop
bind index,pager    b  noop
bind compose,attach b  noop
bind index,pager    ob noop
bind compose,attach ob noop
bind index,pager    c  noop
bind index,pager    v  noop
bind index          ,  noop
bind index,pager    .  noop
bind index,pager    g  noop
bind index,pager    b  noop
bind index,pager    m  noop
bind index,pager    V  noop
bind index,pager    s  noop
#### binds
bind index,pager    bs      sidebar-toggle-visible
bind index,pager    "\Cg"   sidebar-first
bind index,pager    "\Cf"   sidebar-last
bind index,pager    "\Ck"   sidebar-prev
bind index,pager    "\Cj"   sidebar-next
bind index,pager    "\Ch"   sidebar-page-down
bind index,pager    "\Cl"   sidebar-page-up
bind index,pager    "\Co"   sidebar-open
bind pager          "\Cv"   sidebar-toggle-virtual
bind pager          "\CV"   sidebar-toggle-virtual
macro index,pager   .ll    "<limit>all<enter>"
macro index,pager   .lf    "<limit>~F<enter>"
bind index,pager    mm      mail
bind index,pager    mv      view-attachments
bind index,pager    mb      buffy-list
bind index,pager    mr      view-raw-message
bind index,pager    oo      sort-mailbox
bind index,pager    ob      sort-mailbox
bind index,pager    R       group-reply
macro index,pager   gg      <first-entry>
macro index,pager   G       <last-entry>
set my_nund         =      "<next-undeleted><next-undeleted><next-undeleted>"
set my_pund         =      "<previous-undeleted><previous-undeleted><previous-undeleted>"
macro index,pager   "\ek"  "$my_pund$my_pund$my_pund$my_pund"
macro index,pager   "\ej"  "$my_nund$my_nund$my_nund$my_nund"
#### contacts
macro index,pager   A       <create-alias>
bind editor         <Tab>   complete-query
bind editor         ^T      complete
# macro index,pager   "a"   "<pipe-message>goobook add<return>" # goobook unmainted
#### mods
macro index,pager   .r     "<enter-command>source $my_cfg/muttrc<enter>"
#macro index,pager   mww    "<sync-mailbox>y<enter>"
macro index,pager    mww    "<sync-mailbox>"
macro index,pager   "\CR"  "<tag-pattern>~N<enter><tag-prefix><clear-flag>N<untag-pattern>.<enter>" "mark all new as read"
#### mview macros
# brx interfaces with mview while loop
# bry for manual calls
set my_donothing     = " "
set my_uid           = `mview uid` # mutt fails to recognise $UID by itself
set my_f_root        = "/run/user/$my_uid/mutt"
set my_pipe_mvwx     = "<pipe-entry>cat > $my_f_root/mview-x.mime\
                         && echo y > $my_f_fifo<enter>"
set my_pipe_mvwy     = "<pipe-entry>cat > $my_f_mvwy<enter>"
set my_get_html      = "<view-attachments><search>html<enter>$my_f_root/mview-y.html"
set my_mvw           = "<shell-escape>mview qb-rip &<enter>"
set my_bry           = "$my_get_html <shell-escape>mview bry<enter><exit>" #
set my_bfy           = "$my_get_html <shell-escape>mview bfl<enter><exit>" # float y
set my_next_on       = '<enter-command>macro index,pager j "<next-entry>    $my_pipe_mvw"'
set my_prev_on       = '<enter-command>macro index,pager k "<previous-entry>$my_pipe_mvw"'
set my_next_off      = '<enter-command>macro index,pager j "<next-entry>"'
set my_prev_off      = '<enter-command>macro index,pager k "<previous-entry>"'
set my_mvw_down      = "$my_next_off <enter> $my_prev_off<enter>" # kill viewer
set my_mvw_up        = "$my_next_on  <enter> $my_prev_on <enter>" # init viewer
#macro index,pager    bd   "$my_donothing $my_next_off<enter> $my_prev_off<enter>"   # kill viewer
#macro index,pager    bu   "$my_p_mvw     $my_next_on <enter> $my_prev_on <enter>"   # init viewer
macro index,pager    bd   "$my_mvw_down"    
macro index,pager    bu   "$my_mvw_up"
macro index,pager    bi   "$my_mvw"     # init auto pipe
macro index,pager    bb   "$my_bry"     # open in
#macro index,pager    bb   "$my_bry"      # open in
#macro attach,compose bb   "$my_bry_i"    # open in
#macro index,pager    bfx  "$my_bfx"      # open in float
#macro attach,compose bfy  "$my_bfy"      # open in float
#macro index,pager    bt   "$my_btr"      # browser text
macro index,pager \cb "<enter-command> set my_pdsave=\$pipe_decode<enter>\
        <enter-command> unset pipe_decode<enter>\
        <pipe-message>  extract_url | urlscan --compact --run 'qb {}'<enter>\
        <enter-command> set pipe_decode=\$my_pdsave<enter>" "get URLs"
set my_mlx_md2ht     = "<shell-escape>mlx md2html<enter>"
set my_stylex        = "$my_donothing $my_pipe      $my_mlx_md2ht"     # styling
macro compose        .mm  "$my_sty"      # post processing styling
## archive
#set my_f_mvwx        = "$my_f_root/mview-x.html"
#set my_pipe_mvwx     = "<pipe-entry>cat > $my_f_mvwx<enter>"
#set my_btr           = "$my_get_html  $my_pipe      $my_mvw_btr<exit>" # terminal
#set my_bry_i         = "              $my_pipe_ico  $my_mvw_bry<exit>" # second
#set my_p_btr       = "<shell-escape>mview btr<enter>"
## vim:ft=muttrc syntax=neomuttrc
